x-laravel-env: &laravel-env
  APP_ENV: ${APP_ENV:-production}
  APP_DEBUG: ${APP_DEBUG:-false}
  APP_URL: ${APP_URL:-http://localhost:8080}
  APP_KEY: ${APP_KEY:-}
  LOG_CHANNEL: stdout
  LOG_LEVEL: ${LOG_LEVEL:-info}
  DB_CONNECTION: mysql
  DB_HOST: db
  DB_PORT: 3306
  DB_DATABASE: ${DB_DATABASE:-monotickets}
  DB_USERNAME: ${DB_USERNAME:-monotickets}
  DB_PASSWORD: ${DB_PASSWORD:-secret}
  QUEUE_CONNECTION: redis
  REDIS_HOST: redis
  REDIS_PORT: 6379
  CACHE_STORE: redis
  SESSION_DRIVER: redis
  SESSION_LIFETIME: ${SESSION_LIFETIME:-120}
  FINGERPRINT_ENCRYPTION_KEY: ${FINGERPRINT_ENCRYPTION_KEY:-}
  QR_SECRET: ${QR_SECRET:-}

services:
  app:
    build:
      context: .
      target: production
    image: monotickets-api
    restart: unless-stopped
    environment:
      <<: *laravel-env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          php -r "new PDO('mysql:host=' . getenv('DB_HOST') . ';port=' . getenv('DB_PORT') . ';dbname=' . getenv('DB_DATABASE'), getenv('DB_USERNAME'), getenv('DB_PASSWORD'));"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    expose:
      - "9000"
    profiles:
      - dev
      - prod

  web:
    build:
      context: .
      target: nginx
    image: monotickets-api-nginx
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "${API_PORT:-8080}:80"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -fsS http://localhost/ > /dev/null
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - prod

  queue:
    build:
      context: .
      target: production
    image: monotickets-queue
    restart: unless-stopped
    command: ["supervisord", "-c", "/etc/supervisor/conf.d/queue.conf"]
    environment:
      <<: *laravel-env
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - supervisorctl -c /etc/supervisor/conf.d/queue.conf status | grep -q RUNNING
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - dev
      - prod

  scheduler:
    build:
      context: .
      target: production
    image: monotickets-scheduler
    restart: unless-stopped
    command: ["supervisord", "-c", "/etc/supervisor/conf.d/scheduler.conf"]
    environment:
      <<: *laravel-env
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - supervisorctl -c /etc/supervisor/conf.d/scheduler.conf status | grep -q RUNNING
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - dev
      - prod

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - prod

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-monotickets}
      MYSQL_USER: ${DB_USERNAME:-monotickets}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - prod

  frontend:
    build:
      context: frontend
      target: runtime
    image: monotickets-frontend
    restart: unless-stopped
    depends_on:
      web:
        condition: service_healthy
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8080}
      VITE_FINGERPRINT_ENCRYPTION_KEY: ${VITE_FINGERPRINT_ENCRYPTION_KEY:-}
      VITE_METRICS_URL: ${VITE_METRICS_URL:-}
    ports:
      - "${FRONTEND_PORT:-8081}:80"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -fsS http://localhost/ > /dev/null
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - dev
      - prod

volumes:
  mysql_data:
    driver: local
