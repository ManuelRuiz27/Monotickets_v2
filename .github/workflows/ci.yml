name: CI

on:
  push:
    branches:
      - main
      - develop
      - feat/**
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ["8.2"]
        node: ["20"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: mbstring, dom, fileinfo, sqlite3
          ini-values: error_reporting=E_ALL, display_errors=On

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            frontend/package-lock.json

      - name: Install npm dependencies
        run: |
          npm install --no-audit --no-fund
          npm install --prefix frontend --no-audit --no-fund

      - name: Run linters
        run: npm run lint

      - name: Type check frontend
        run: npm run typecheck

      - name: Validate OpenAPI specification
        run: npm run openapi:validate

      - name: Run PHP unit tests
        run: composer test
